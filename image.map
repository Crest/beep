Archive member included because of file (symbol)

/usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_exit.o)
                              /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/../../../../avr/lib/crttn25.o (exit)
/usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/../../../../avr/lib/crttn25.o
LOAD main.o
LOAD /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a
LOAD /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/../../../../avr/lib/libc.a
LOAD /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000       0x76
 *(.vectors)
 .vectors       0x00000000       0x1e /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/../../../../avr/lib/crttn25.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000001e                . = ALIGN (0x2)
                0x0000001e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000001e        0x0 linker stubs
 *(.trampolines*)
                0x0000001e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000001e                __ctors_start = .
 *(.ctors)
                0x0000001e                __ctors_end = .
                0x0000001e                __dtors_start = .
 *(.dtors)
                0x0000001e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000001e        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/../../../../avr/lib/crttn25.o
                0x0000001e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000001e        0x8 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/../../../../avr/lib/crttn25.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000026       0x18 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_copy_data.o)
                0x00000026                __do_copy_data
 .init4         0x0000003e       0x10 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_clear_bss.o)
                0x0000003e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000004e        0x4 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/../../../../avr/lib/crttn25.o
 *(.init9)
 *(.text)
 .text          0x00000052        0x2 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/../../../../avr/lib/crttn25.o
                0x00000052                __vector_1
                0x00000052                __vector_12
                0x00000052                __bad_interrupt
                0x00000052                __vector_6
                0x00000052                __vector_3
                0x00000052                __vector_11
                0x00000052                __vector_13
                0x00000052                __vector_7
                0x00000052                __vector_5
                0x00000052                __vector_4
                0x00000052                __vector_9
                0x00000052                __vector_2
                0x00000052                __vector_8
                0x00000052                __vector_14
                0x00000052                __vector_10
 .text          0x00000054       0x20 main.o
                0x00000054                main
 .text          0x00000074        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_exit.o)
 .text          0x00000074        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_copy_data.o)
 .text          0x00000074        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_clear_bss.o)
                0x00000074                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000074        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_exit.o)
 .text.libgcc   0x00000074        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000074        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_clear_bss.o)
                0x00000074                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000074        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_exit.o)
                0x00000074                exit
                0x00000074                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000074        0x2 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_exit.o)
 *(.fini0)
                0x00000076                _etext = .

.data           0x00800060        0x0 load address 0x00000076
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/../../../../avr/lib/crttn25.o
 .data          0x00800060        0x0 main.o
 .data          0x00800060        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_exit.o)
 .data          0x00800060        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x0 load address 0x00000076
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/../../../../avr/lib/crttn25.o
 .bss           0x00800060        0x0 main.o
 .bss           0x00800060        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_exit.o)
 .bss           0x00800060        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_copy_data.o)
 .bss           0x00800060        0x0 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800060                PROVIDE (__bss_end, .)
                0x00000076                __data_load_start = LOADADDR (.data)
                0x00000076                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800060        0x0
                0x00800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800060                PROVIDE (__noinit_end, .)
                0x00800060                _end = .
                0x00800060                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x69c
 *(.stab)
 .stab          0x00000000      0x69c /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/../../../../avr/lib/crttn25.o

.stabstr        0x00000000       0x82
 *(.stabstr)
 .stabstr       0x00000000       0x82 /usr/local/AVRMacPack-20080721/lib/gcc/avr/3.4.6/../../../../avr/lib/crttn25.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x14
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x14 main.o

.debug_pubnames
                0x00000000       0x1b
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b main.o

.debug_info     0x00000000       0x73
 *(.debug_info)
 .debug_info    0x00000000       0x73 main.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000       0x3f
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x3f main.o

.debug_line     0x00000000       0xe6
 *(.debug_line)
 .debug_line    0x00000000       0xe6 main.o

.debug_frame
 *(.debug_frame)

.debug_str      0x00000000       0x65
 *(.debug_str)
 .debug_str     0x00000000       0x65 main.o
                                 0x99 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(image.elf elf32-avr)
LOAD linker stubs
